package thread.lock;
public class Account { 
   //定义锁对象
   private final ReentrantLock lock=new ReentrantLock(); 
   //封装账户编号、账户余额两个Field 
   private String accountNo; 
   private double balance; 
   //构造器
   public Account(String accountNo,double balance){ 
      this.accountNo=accountNo; 
      this.balance =balance; 
   } 
 
   public String getAccountNo() { 
      return accountNo; 
   } 
 
   public void setAccountNo(String accountNo) { 
      this.accountNo = accountNo; 
   } 
   //账户余额不允许随便修改，所以只为balance提供getter方法
   public double getBalance() { 
      return this.balance; 
   } 
   //提供一个线程安全的draw()方法来完成取钱操作
   public void draw(double drawAmount){ 
      //加锁
      lock.lock(); 
      try{ 
         //账户余额大于去钱数目
         if(balance>=drawAmount){ 
            //吐出钞票
            System.out.println(Thread.currentThread().getName()+"取钱成功！吐出钞票"+drawAmount); 
            try{ 
               Thread.sleep(1); 
            }catch(InterruptedException ex){ 
               ex.printStackTrace(); 
            } 
            //修改余额
            balance-=drawAmount; 
            System.out.println("\t余额为："+balance); 
         }else{ 
            System.out.println(Thread.currentThread().getName()+"取钱失败！余额不足!"); 
         } 
      }finally{ 
            //修改完成，释放锁
            lock.unlock(); 
      } 
   } 
} 

